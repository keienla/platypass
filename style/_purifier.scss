@use './../utils';

/***
    The new CSS reset - version 1.6.0 (last updated 29.4.2022)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

@viewport {
    width: auto, device-width;
}

*:where(:not(html, iframe, canvas, img, svg, video, script, style):not(svg *, symbol *)) {
    all: unset;
    display: revert;
}

html {
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
    all: initial;
    font-size: utils.$rem-baseline;
    height: 100%;
    line-height: initial;
    scroll-behavior: smooth;
    width: 100%;
}

*, *::after, *::before{
    box-sizing: inherit;
}

body {
    box-sizing: border-box;
    margin: 0;
    min-height: 100%;
    overflow-x: hidden;
    width: 100%;
}

/* Reapply the pointer cursor for anchor tags */
a, button {
    cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol, ul, menu {
    list-style: none;
}

/* For images to not be able to exceed their container */
img {
    max-width: 100%;
}

/* removes spacing between cells in tables */
table {
    border-collapse: collapse;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
    white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
    -webkit-appearance: revert;
    appearance: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
    color: unset;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
    display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly. */
:where([contenteditable]) {
    -moz-user-modify: read-write;
    -webkit-user-modify: read-write;
    overflow-wrap: break-word;
    -webkit-line-break: after-white-space;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
    -webkit-user-drag: element;
}

// If user have prefers-reduced-motion: reduce as preference
// Set animation duration to 0.001s for all
// Like this animation is not visible
// and js can detect when an animation is finished to continue some task
@media
    (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.001s !important;
    }
}